#!/usr/bin/python
import os,sys,re

filein=os.path.abspath('/Users/josec/Desktop/Skad4_astral/Book1.txt')







filename=os.path.basename(filein)
pwd=os.path.dirname(filein)
rfilename="r_"+filename

codex="""WAMR77377,WAMR77377_OUT
NTMR19050,NTMR19050_fas_doug_A
SAMAR60807,SAMAR60807_fas_doug_A
SAMAR36196,SAMAR36196_intermedius
SAMAR36137,SAMAR36137_intermedius
NTMR18797,NTMR18797_intermedius
SAMAR55282,SAMAR55282_intermedius
NTMR15101,NTMR15101_intermedius
WAMR110613,WAMR110613_intermedius
WAMR110605,WAMR110605_intermedius
ABTC128446,ABTC128446_intermedius
QMJ84001,QMJ84001_fas_doug_A
WAMR156726,WAMR156726_iso_EJ
WAMR172727,WAMR172727_iso_EJ
WAMR96946,WAMR96946_iso_EJ
WAMR127327,WAMR127327_iso_EJ
WAMR169933,WAMR169933_iso_EJ
WAMR152076,WAMR152076_iso_EJ
WAMR168442,WAMR168442_iso_EJ
WAMR114465,WAMR114465_iso_EJ
WAMR165431,WAMR165431_iso_EJ
WAMR165438,WAMR165438_iso_EJ
WAMR172616,WAMR172616_iso_EJ
WAMR168300,WAMR168300_iso_EJ
WAMR171427,WAMR171427_iso_EJ
WAMR168041,WAMR168041_iso_EJ
WAMR172645,WAMR172645_iso_EJ
WAMR106283,WAMR106283_iso_EJ
WAMR171134,WAMR171134_iso_EJ
WAMR171108,WAMR171108_iso_EJ
TR648,TR648_iso_EJ
WAMR167419,WAMR167419_iso_EJ
WAMR167189,WAMR167189_iso_EJ
WAMR167150,WAMR167150_iso_EJ
WAMR158947,WAMR158947_iso_EJ
WAMR172339,WAMR172339_iso_EJ
WAMR168750,WAMR168750_iso_EJ
WAMR158602,WAMR158602_iso_EJ
WAMR163567,WAMR163567_iso_EJ
WAMR172902,WAMR172902_iso_EJ
ABTC127954,ABTC127954_iso_EJ
ABTC127955,ABTC127955_iso_EJ
WAMR157220,WAMR157220_iso_KL
WAMR157329,WAMR157329_iso_KL
WAMR170688,WAMR170688_iso_KL
WAMR139480,WAMR139480_iso_KL
WAMR135278,WAMR135278_iso_KL
WAMR132658,WAMR132658_iso_KL
WAMR117686,WAMR117686_iso_KL
WAMR102102,WAMR102102_iso_KL
WAMR141501,WAMR141501_iso_KL
WAMR164598,WAMR164598_iso_KL
WAMR164599,WAMR164599_iso_KL
WAMR146023,WAMR146023_iso_KL
WAMR114238,WAMR114238_iso_KL
WAMR145892,WAMR145892_iso_KL
WAMR132999,WAMR132999_iso_KL
WAMR137941,WAMR137941_iso_KL
WAMR126047,WAMR126047_iso_KL
WAMR115757,WAMR115757_iso_KL
WAMR166117,WAMR166117_musivus?
WAMR163947,WAMR163947_musivus?
WAMR163917,WAMR163917_musivus?
WAMR163375,WAMR163375_pallidus
WAMR163373,WAMR163373_pallidus
WAMR163376,WAMR163376_pallidus
WAMR163378,WAMR163378_pallidus
WAMR163377,WAMR163377_pallidus
WAMR163374,WAMR163374_pallidus
SAMAR48582,SAMAR48582_pallidus
SAMAR45422,SAMAR45422_pallidus
WAMR156831,WAMR156831_pallidus
WAMR156832,WAMR156832_pallidus
WAMR164259,WAMR164259_pallidus
WAMR164265,WAMR164265_pallidus
WAMR164294,WAMR164294_pallidus
WAMR164295,WAMR164295_pallidus
WAMR158473,WAMR158473_pallidus
WAMR132453,WAMR132453_pallidus
WAMR132454,WAMR132454_pallidus
WAMR134384,WAMR134384_pallidus
WAMR170412,WAMR170412_pallidus
WAMR172403,WAMR172403_pallidus
WAMR172413,WAMR172413_pallidus
WAMR102912,WAMR102912_pallidus
WAMR139445,WAMR139445_pallidus
WAMR139446,WAMR139446_pallidus
WAMR108933,WAMR108933_pallidus
WAMR108937,WAMR108937_pallidus
WAMR139422,WAMR139422_pallidus
WAMR119950,WAMR119950_pallidus
WAMR156825,WAMR156825_pallidus
WAMR154526,WAMR154526_pallidus
WAMR139021,WAMR139021_pallidus
SAMAR48346,SAMAR48346_phantasmus
SAMAR46461,SAMAR46461_phantasmus
ABTC36325,ABTC36325_phantasmus
SAMAR46063,SAMAR46063_phantasmus
SAMAR49355,SAMAR49355_phantasmus
SAMAR54255,SAMAR54255_phantasmus
SAMAR51018,SAMAR51018_phantasmus
SAMAR43907,SAMAR43907_phantasmus
SAMAR44805,SAMAR44805_phantasmus
SAMAR51482,SAMAR51482_phantasmus
SAMAR58743,SAMAR58743_phantasmus
SAMAR36195,SAMAR36195_phantasmus
NTMR17654,NTMR17654_phantasmus
NTMR16391,NTMR16391_phantasmus
SAMAR32035,SAMAR32035_r_central
WAMR166703,WAMR166703_r_central
SAMAR57205,SAMAR57205_r_central
SAMAR57206,SAMAR57206_r_central
SAMAR57888,SAMAR57888_r_central
SAMAR57899,SAMAR57899_r_central
SAMAR62317,SAMAR62317_r_central
SAMAR43789,SAMAR43789_r_central
SAMAR43797,SAMAR43797_r_central
WAMR163380,WAMR163380_r_central
SAMAR51252,SAMAR51252_r_central
SAMAR49681,SAMAR49681_r_eastern
AMSR156753,AMSR156753_r_eastern
SAMAR33001,SAMAR33001_r_eastern
SAMAR44701,SAMAR44701_r_eastern
AMSR156053,AMSR156053_r_eastern
AMSR152111,AMSR152111_r_eastern
SAMAR61766,SAMAR61766_r_eastern
SAMAR47225,SAMAR47225_r_eastern
SAMAR62368,SAMAR62368_r_eastern
SAMAR62305,SAMAR62305_r_eastern
SAMAR51621,SAMAR51621_r_eastern
SAMAR51566,SAMAR51566_r_eastern
SAMAR42847,SAMAR42847_r_eastern
SAMAR42766,SAMAR42766_r_eastern
SAMAR42767,SAMAR42767_r_eastern
WAMR115916,WAMR115916_r_western
WAMR153973,WAMR153973_r_western
WAMR103906,WAMR103906_r_western
WAMR126941,WAMR126941_r_western
SAMAR59070,SAMAR59070_r_western
WAMR132187,WAMR132187_r_western
WAMR97730,WAMR97730_r_western
WAMR163151,WAMR163151_r_western
WAMR165726,WAMR165726_r_western
WAMR97732,WAMR97732_r_western
WAMR97728,WAMR97728_r_western
SAMAR29363,SAMAR29363_r_western
WAMR165711,WAMR165711_r_western
WAMR119792,WAMR119792_r_western
WAMR156160,WAMR156160_r_western
WAMR102773,WAMR102773_r_western
WAMR110756,WAMR110756_rubiginosis
WAMR154562,WAMR154562_rubiginosis
WAMR129631,WAMR129631_rubiginosis
WAMR125768,WAMR125768_rubiginosis
WAMR165035,WAMR165035_rubiginosis
WAMR135365,WAMR135365_rubiginosis
WAMR164205,WAMR164205_rubiginosis
WAMR170738,WAMR170738_rubiginosis
WAMR110102,WAMR110102_rubiginosis
WAMR110134,WAMR110134_rubiginosis
WAMR157584,WAMR157584_rubiginosis
WAMR139329,WAMR139329_rubiginosis
WAMR160001,WAMR160001_rubiginosis
WAMR161254,WAMR161254_rubiginosis
WAMR145527,WAMR145527_rubiginosis
WAMR166630,WAMR166630_rubiginosis
WAMR166643,WAMR166643_rubiginosis
WAMR166645,WAMR166645_rubiginosis
WAMR154913,WAMR154913_rubiginosis
WAMR165786,WAMR165786_rubiginosis
WAMR164167,WAMR164167_rubiginosis
WAMR164117,WAMR164117_rubiginosis
WAMR160028,WAMR160028_rubiginosis
WAMR161696,WAMR161696_rubiginosis
ABTC128020,ABTC128020_rubiginosis
WAMR144569,WAMR144569_unknown
SAMAR47214,SAMAR47214_unknown
SAMAR43939,SAMAR43939_unknown
NTMR18270,NTMR18270_unknown
WAMR164206,WAMR164206_OUT
ABTC128445,ABTC128445_unknown
NTMR26927,NTMR26927_unknown
ABTC21460,ABTC21460_unknown
ABTC84368,ABTC84368_unknown
ABTC84369,ABTC84369_unknown"""
clist=codex.split('\n')
codexdict={}
for c in clist:
    pair=c.split(',')
    codexdict[pair[0]]=pair[1]

with open(filein,'r') as filein:
    with open(os.path.join(pwd,rfilename),'w') as fileout:
        instring=filein.read()
        # fileout.write(instring)
        for key in codexdict:
            instring=instring.replace(key,codexdict[key])
        # fileout.write("\n\n\n")
        instring=instring.replace("CHANGE","")
        fileout.write(instring)
print("done")
